html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

body {
  background-color: #fafafa;
  font-family: Arial, sans-serif;
  color: #212121;
  margin: 0;
  font-weight: 600;
}

li {
  list-style: none;
}

.card {
  width: 100%;
  height: 60px;
}
@media screen and (min-width: 768px) {
  .card {
    height: 90px;
  }
}
@media screen and (min-width: 1200px) {
  .card {
    height: 150px;
  }
}

.label {
  position: relative;
  display: inline-block;
  width: 100%;
  height: 100%;
  border: 1px solid #cccccc;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;
  border-radius: 7px;
  overflow: hidden;
}

.labelOption {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #fafafa;
  font-size: 30px;
  width: 100%;
  height: 100%;
  border-radius: 10px;
  cursor: pointer;
}
@media screen and (min-width: 768px) {
  .labelOption {
    font-size: 50px;
  }
}
@media screen and (min-width: 1200px) {
  .labelOption {
    font-size: 70px;
  }
}

.labelOption::after {
  position: absolute;
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 1;
  background: linear-gradient(45deg, rgb(166, 176, 174), rgb(229, 247, 247));
  transition: transform 250ms ease-in-out;
  transition: 0.3s ease, transform 0.3s ease, background 0.3s ease;
}

.card:hover .labelOption::after,
.card:focus .labelOption::after {
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
  transform: translateY(-2px);
  background: linear-gradient(45deg, rgb(201, 210, 208), rgb(213, 241, 242));
}

input[type=checkbox]:checked + .labelOption::after {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}/*# sourceMappingURL=gameItem.module.css.map */